/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
//虽然过了但是感觉这个方法不大漂亮啊
public:
    vector<int> inorderTraversal(TreeNode *root) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        vector<int> result;
        TreeNode *p = root;
        vector<TreeNode*> path;
        if(root!=NULL) path.push_back(root);
        
        int i=0;
        while(1){
            if (path.size() == 0) break;

            if (p==path.back()){
                p = path.back()->left;
                if (p!=NULL){
                    path.push_back(p);
                    continue;
                }
            }
            if (p==path.back()->left){
                result.push_back(path.back()->val);
                p = path.back()->right;
                if (p!=NULL){
                    path.push_back(p);
                    continue;
                }                
            }
            if (p==path.back()->right){
                p = path.back();
                path.pop_back();
            }
        }
        
        return result;
    }
};