class Solution {
public:
    double findMedianSortedArrays(int A[], int m, int B[], int n) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int t;
        int *pt;
        if (m>n){
            pt = A; A = B; B = pt;
            t = m; m = n; n = t;
        }
        
        int mida = (m-1)/2 ;
        int midb = (n-1)/2;
        
        if (m==0){
            if (n%2==0){
                return ((double)B[midb]+B[midb+1])/2;
            }else{
                return B[midb];
            }
        }
        
        if (m==1){
            if (n%2==0){
                if (A[0]>B[midb]){
                    return A[0]<B[midb+1]?A[0]:B[midb+1];
                }else{
                    return B[midb];
                }
            }else{
                if (A[0]>B[midb]){
                    if (n>1 && A[0]>B[midb+1]){
                        return (0.0+B[midb]+B[midb+1])/2;
                    }else{
                        return (0.0+A[0]+B[midb])/2;
                    }
                }else{
                    if (n>1 && A[0]<B[midb-1]){
                        return (0.0+B[midb]+B[midb-1])/2;
                    }else{
                        return (0.0+A[0]+B[midb])/2;
                    }                    
                }
            }
        }
        
        if (m==2){
            if (n%2==1){
                if (A[0]<B[midb]){
                    return findMedianSortedArrays(A+1,1,B,n-1);
                }else{
                    return findMedianSortedArrays(A,1,B+1,n-1);
                }
            }else{
                if (A[0]<B[midb]){
                    if (A[1]>B[midb+1]){
                        return (0.0+B[midb]+B[midb+1])/2;
                    }else{
                        return findMedianSortedArrays(A+1,1,B,n-1);
                    }
                }else{
                    if (A[0]>B[midb+1]){
                        return findMedianSortedArrays(A,1,B+1,n-1);
                    }else{
                        t = A[1]<B[midb+1]?A[1]:B[midb+1];
                        return (0.0+A[0]+t)/2;
                    }                    
                }
            }
        }

        
        if (A[mida] < B[midb]){
            return findMedianSortedArrays(A+mida,m-mida,B,n-mida);
        }else{
            return findMedianSortedArrays(A,m-mida,B+mida,n-mida);
        }
    }
};