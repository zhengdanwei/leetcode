class Solution {
public:
    vector<int> spiralOrder(vector<vector<int> > &matrix) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        vector<int> result;
        
        int n = matrix.size();
        if (n==0) return result;
        
        int m = matrix[0].size();
        int s = m<n?m:n;

        for (int i=0;i<s/2;i++){
            for (int j=i;j<m-1-i;j++){
                result.push_back(matrix[i][j]);
            }
            for (int j=i;j<n-1-i;j++){
                result.push_back(matrix[j][m-i-1]);
            }
            for (int j=i;j<m-1-i;j++){
                result.push_back(matrix[n-i-1][m-j-1]);
            }
            for (int j=i;j<n-1-i;j++){
                result.push_back(matrix[n-j-1][i]);
            }            
        }
        
        if (s%2==1) {
            if (n<m) {
                for (int i=0;i<m-n+1;i++) result.push_back(matrix[n/2][n/2+i]);
            }else{
                for (int i=0;i<n-m+1;i++) result.push_back(matrix[m/2+i][m/2]);
            }
        };
        return result;
    }
};