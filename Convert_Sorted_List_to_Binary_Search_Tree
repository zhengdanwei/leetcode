/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode *sortedListToBST(ListNode *head) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if (head==NULL) return NULL;
        
        ListNode* p1=head;
        ListNode* p2=head->next;
        ListNode* pp=NULL;
        
        while (p2!=NULL){
            pp = p1;
            p1 = p1->next;
            p2 = p2->next;
            if (p2!=NULL) p2 = p2->next;
        }
        
        TreeNode* root = NULL;
        if (p1!=NULL){
            root = new TreeNode(p1->val);
            if (pp!=NULL){
                pp->next = NULL;
                root->left = sortedListToBST(head);            
            }
            root->right = sortedListToBST(p1->next);        
        }
        
        return root;
    }
};