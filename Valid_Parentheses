class Solution {
public:
    bool isLeftBracket(char c){
        if (c=='(' || c=='{' || c=='[')
            return true;
        else return false;
    }
    
    bool matchBracket(char l, char r){
        if (l=='(' && r==')') return true;
        if (l=='{' && r=='}') return true;
        if (l=='[' && r==']') return true;
        return false;
    }
    

    bool isValid(string s) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        stack<char> st;
        for (int i=0;i<s.size();i++){            
            if (isLeftBracket(s[i])){
                st.push(s[i]);
            }else{
                if (st.empty()) return false;
                if (!matchBracket(st.top(), s[i])){
                    return false;
                }else{
                    st.pop();
                }
            }
        }
        if (st.empty()) return true;
        else return false;
    }
};