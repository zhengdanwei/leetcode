class Solution {
public:
    vector<bool> inter;
    vector<bool> init;
    
    string s1,s2,s3;
    bool isInter(int l1, int l2){
        bool result = false;
        int i = l1*s2.size()+l2;
        if (init[i]) return inter[i];
                
        if (l1==0 && l2==0) result = true;
        if (l1>0 && s3[l1+l2-1] == s1[l1-1] && isInter(l1-1,l2)) result = true;
        if (l2>0 && s3[l1+l2-1] == s2[l2-1] && isInter(l1,l2-1)) result = true;
        
        init[i] = true;
        inter[i] = result;
        
        return result;
    } 

    bool isInterleave(string _s1, string _s2, string _s3) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function    
        s1 = _s1; s2 = _s2; s3 = _s3;
        int n = (s1.size()+1)*(s2.size()+1);
        inter.assign(n, false);
        init.assign(n, false);        
        if (_s3.size()!=_s1.size()+_s2.size()) return false;
        return isInter(s1.size(), s2.size());
    }
};