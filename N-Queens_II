class Solution {
public:
    vector<bool> col;
    vector<bool> diag1;
    vector<bool> diag2;
    int result;
    int n;

    void generate(){
        result++;
    }


    void dfs(int i){
        if (i>=n){
            generate();
            return;
        }
        
        for (int j=0;j<n;j++){ 
            if (col[j]) continue;
            if (diag1[i+j]) continue;
            if (diag2[n-i+j]) continue;
            
            col[j] = true;
            diag1[i+j] = true;
            diag2[n-i+j] = true;

            dfs(i+1);

            col[j] = false;
            diag1[i+j] = false;
            diag2[n-i+j] = false;
        }
    }

    int totalNQueens(int _n) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        n = _n;
        result = 0;
        col.assign(_n, false);
        diag1.assign(2*_n, false);
        diag2.assign(2*_n, false);
        
        dfs(0);
        return result;        
    }
};