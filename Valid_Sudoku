class Solution {
public:

    bool isValidSudoku(vector<vector<char> > &board) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int n,i,j;
        n = 9;
        
        map<char, bool> count;
        bool flag;
        char c;
        
        for (i=0;i<n;i++){
            count.clear();
            for (j=0;j<n;j++){
                c = board[i][j];
                if ( c != '.' )
                    if ( count.find(c)==count.end() ) count[c] = true;
                    else return false;
            }
        }
        
        for (i=0;i<n;i++){
            count.clear();
            for (j=0;j<n;j++){
                c = board[j][i];
                if ( c != '.' )
                    if ( count.find(c)==count.end() ) count[c] = true;
                    else return false;
            }
        }
        
        for (i=0;i<n;i++){
            count.clear();
            for (j=0;j<n;j++){
                c = board[i-i%3+j/3][i%3*3+j%3];
                if ( c != '.' )
                    if ( count.find(c)==count.end() ) count[c] = true;
                    else return false;
            }
        }
        
        return true;
    }
};